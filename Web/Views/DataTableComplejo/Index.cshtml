
<div class="card">

    <div class="card-header">
        <div class="row">
            <div class="col-12 d-flex align-items-end justify-content-between">
                <h4 class="float-left heading h4-responsive mb-0">Probando DataTable</h4>
            </div>
        </div>
    </div>
    <div class="card-body">

        <div class="row mb-4 mt2 info">
            <div class="col-12">
                <br />

                <table id="TablaResultados" class="datatables table table-hover table-striped table-bordered m-0" width="100%">
                    <thead>
                        <tr>
                            <th>
                                <fieldset class="form-check">
                                    <input class="form-check-input table-check" type="checkbox" name="seleccionarTodo"
                                    onchange="seleccionarTodo(event)"
                                    id="checkbox_TablaResultados_SeleccionarTodo">

                                    <label class="form-check-label" for="checkbox_TablaResultados_SeleccionarTodo"></label>
                                </fieldset>
                            </th>
                            <th>N&deg;</th>
                            <th>NOMBRE</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
    <div class="card-footer">
        <div class="row py-2 flex-row">

            <div class="col col-md-6  d-flex justify-content-start">

            </div>
            <div class="col col-md-6 d-flex justify-content-end">

                <button type="button" onclick="imprimirSeleccionados()" class="btn btn-primary">
                    <span>Imprimir Seleccionados</span>
                </button>

                <button type="button" class="btn btn-secondary">
                    <span>Probando</span>
                </button>

            </div>
        </div>
    </div>

</div>

<script>

    this.arregloCheckbox = [];                   // public arregloCheckbox: Array<string> = [];
    this.estaTodoSeleccionadoCheckbox = false;   // public estaTodoSeleccionadoCheckbox: boolean = false;

    $(document).ready(function() 
    {
        desplegarGrilla();
    });

    function desplegarGrilla(cargaInicial = false)
    {
        var oTable = $("#TablaResultados").DataTable({
            destroy: true,
            dom: '<"top top-grey"<"dataTables_actions"f>> <t> <"bottom mt-2 d-flex align-items-center justify-content-between flex-wrap"<"d-flex" il>p>',
            scrollY: "60vh",
            scrollX: true,
            lengthMenu: [[10, 20, 30, 50, -1], [10, 20, 30, 50, "Todas"]],
            aaSorting: [],
            processing: true,             // for show progress bar
            serverSide: true,             // for process server side
            filter: true,                 // this is for disable filter (search box)
            orderMulti: false,            // for disable multiple column at once
            initComplete: () =>
            {
                let input = $("#TablaResultados_wrapper input[type='search']");
                let wait = null;
                input.unbind().bind("keyup", () => {
                    clearTimeout(wait);
                    wait = setTimeout(() => oTable.search(input.val()).draw(), 500);   // Retraso de 500 milisegundos antes de realizar la búsqueda
                });
            },
            ajax: {
                  url: "@Url.Action("ObtenerDatos", "DataTableComplejo")",
                  type: "post",
                  datatype: "json",
                  data: x => 
                  {
                      x.cualquierCosa = 0;
                      x.cargaInicial = cargaInicial;
                  },
                  dataFilter: function (data) {

                      var json = jQuery.parseJSON(data);

                      var retorno = {
                          draw: json.INFO_TABLA.draw,
                          recordsFiltered: json.INFO_TABLA.totalRegistros,
                          recordsTotal: json.INFO_TABLA.totalRegistros,
                          data: json.INFO_TABLA.data
                      };

                      return JSON.stringify(retorno);
                  },
                  beforeSend: () => {
                    showLoading();
                  },
                  error: () => {
                    alert("Se encontró un error al realizar la consulta");
                  },
                  complete: () => {
                    hideLoading();
                    cargaInicial = false;  // Asi no hace otras consultas al cambiar de página
                  }
            },
            columns: [
                { 
                  "className": "text-nowrap", "sortable": false, "render": (data, type, row, meta) => 
                  {
                    let checked = (
                        (!this.estaTodoSeleccionadoCheckbox && this.arregloCheckbox.includes(row.codigo)) ||
                        (this.estaTodoSeleccionadoCheckbox && !this.arregloCheckbox.includes(row.codigo))
                    ) 
                    ? "checked" : "";

                    return `
                    <fieldset class="form-check">
                        <input class="form-check-input table-check" type="checkbox" 
                        onchange="seleccionItem(event, ${row.codigo})"
                        id="checkbox_TablaResultados_${row.codigo}" ${checked}>

                        <label class="form-check-label" for="checkbox_TablaResultados_${row.codigo}"></label>
                    </fieldset>`;
                  } 
                },
                { "className": "text-nowrap", "render": (data, type, row, meta) => row.codigo },
                { "className": "text-nowrap", "render": (data, type, row, meta) => row.nombre }
            ],
            order: [[1, 'desc']]    // Ordena por codigo
        });
    }

    function seleccionarTodo(evento)
    {
        Array.from(document.querySelectorAll("#TablaResultados input[type='checkbox']")).filter(x => x.name !== "seleccionarTodo")
            .forEach(x => {
                x.checked = evento.target.checked;
            });

        this.estaTodoSeleccionadoCheckbox = evento.target.checked;
        this.arregloCheckbox = [];  // Tanto si selecciona todo, o remueve todo, quita los elementos seleccionados

        console.log("this.estaTodoSeleccionado", this.estaTodoSeleccionadoCheckbox);
    }

    function seleccionItem(evento, codigo)
    {
        let checkSeleccionarTodo = document.querySelector(`#checkbox_TablaResultados_SeleccionarTodo`);

        if (evento.target.checked)
        {
            if (!this.estaTodoSeleccionadoCheckbox)
                this.arregloCheckbox.push(codigo);
            else
            {
                this.arregloCheckbox = this.arregloCheckbox.filter(x => x != codigo);

                if (this.arregloCheckbox.length == 0)
                    checkSeleccionarTodo.checked = true;
            }
        }
        else
        {
            if (!this.estaTodoSeleccionadoCheckbox)
                this.arregloCheckbox = this.arregloCheckbox.filter(x => x != codigo);
            else
                this.arregloCheckbox.push(codigo);

            checkSeleccionarTodo.checked = false;
        }

        let totalRegistros = $("#TablaResultados").DataTable().page.info().recordsTotal;

        if (this.arregloCheckbox.length == totalRegistros)
        {
            checkSeleccionarTodo.checked = !this.estaTodoSeleccionadoCheckbox;
            this.estaTodoSeleccionadoCheckbox = !this.estaTodoSeleccionadoCheckbox;
            this.arregloCheckbox = [];
            console.log(`Se alcanzó el total de registros | this.arregloCheckbox = ${JSON.stringify(this.arregloCheckbox)} | this.estaTodoSeleccionadoCheckbox = ${this.estaTodoSeleccionadoCheckbox}`);
        }
        else {
            console.log(`this.arregloCheckbox = ${JSON.stringify(this.arregloCheckbox)} | this.estaTodoSeleccionadoCheckbox = ${this.estaTodoSeleccionadoCheckbox}`);
        }
    }

    async function imprimirSeleccionados()
    {
        if (this.arregloCheckbox.length == 0 && !this.estaTodoSeleccionadoCheckbox) {
            return alert("Es necesario seleccionar al menos un elemento");
        }

        let queryString = `p_todas=${this.estaTodoSeleccionadoCheckbox}&p_codigos=${this.arregloCheckbox.join(",")}`;

        showLoading();

        try {
            let res = await obtenerDatos({
                url: `@Url.Action("TraerSeleccionados", "DataTableComplejo")`,
                queryString
            });

            console.log(res);
        }
        catch (ex) {
            console.log(ex);
        }
        finally { hideLoading() }
    }

    function obtenerDatos(datos)
    {
        return new Promise((resolve, reject) =>
        {
            fetch(datos.url, {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: datos.queryString,
            })
            .then(response =>
            {
                if (response.ok)
                {
                    response.json().then(res =>
                    {
                        if (res.status == 200)
                            resolve(res.objeto);
                        else
                            reject(res);
                    });
                }
            })
            .catch(error => {
                reject("Ocurrió un error al obtener la información");
            });
        });
    }

    function showLoading() {

    }

    function hideLoading() {

    }

</script>
