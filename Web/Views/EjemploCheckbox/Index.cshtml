<style>

    .agrupador-checkbox {
        height: 425px;
        border-right: 2px solid #ddd;
        background: #f1f1f1;
        overflow-y: scroll;
    }

</style>

<div class="page-content">

    <div class="navbar-overlay"></div>

    <div id="menuContent">

        <!-- Loading Overlay -->
        <div class="loading-backdrop" id="loadingOverlay">
            <div class="loading-circle">
                <div class="preloader-wrapper big active"><div class="spinner-layer spinner-white-only"><div class="circle-clipper left"><div class="circle"></div></div><div class="gap-patch"><div class="circle"></div></div><div class="circle-clipper right"><div class="circle"></div></div></div></div>
            </div>
        </div>
    </div>

    <main class="container">

        <section>

            <div class="card">

                <div class="card-header">
                    <div class="row">
                        <div class="col-12 d-flex align-items-end justify-content-between">
                            <h4 class="float-left heading h4-responsive mb-0">Probando</h4>
                        </div>
                    </div>
                </div>
                <div class="card-body">

                    <div class="row mb-4 mt2 info">
                        <div class="col-md-4 mb-4">
                            <div class=""><strong>Regiones</strong></div>
                            <div class="md-form">
                                <input placeholder="Buscar" type="search" id="form-autocomplete" class="form-control mdb-autocomplete"><ul class="mdb-autocomplete-wrap"></ul>
                                @*<button class="mdb-autocomplete-clear">
                                    <i class="material-icons">close</i>
                                </button>*@
                            </div>

                            <div class="agrupador-checkbox mt-2">
                                <div id="probandoRegiones" class="mensajes">
                                </div>
                            </div>
                        </div>


                        <div id="area-academica-1" class="col-md-4 mb-4">
                            <div class=""><strong>Provincias</strong></div>
                            <div class="md-form">
                                <input placeholder="Buscar" type="search" id="form-autocomplete" class="form-control mdb-autocomplete">
                                @*<button class="mdb-autocomplete-clear">
                                    <i class="material-icons">close</i>
                                </button>*@
                            </div>
                            <div class="agrupador-checkbox mt-2">
                                <div id="probandoProvincias" class="mensajes">
                                </div>
                            </div>
                        </div>

                        <div id="area-academica-2" class="col-md-4 mb-4" style="display: block;">
                            <div class=""><strong>Comunas</strong></div>
                            <div class="md-form">
                                <input placeholder="Buscar" type="search" id="form-autocomplete" class="form-control mdb-autocomplete">
                                @*<button class="mdb-autocomplete-clear">
                                    <i class="material-icons">close</i>
                                </button>*@
                            </div>
                            <div class="agrupador-checkbox mt-2">
                                <div id="probandoComunas" class="mensajes">
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="card-footer">
                    <div class="row py-2 flex-row">

                        <div class="col col-md-6  d-flex justify-content-start">

                        </div>
                        <div class="col col-md-6 d-flex justify-content-end">

                            <button type="button" class="btn btn-outline waves-effect waves-light">
                                <span>No hace nada</span>
                            </button>

                            <button type="button" class="btn btn-default waves-effect waves-light">
                                <span>No hace nada</span>
                            </button>

                        </div>
                    </div>
                </div>

            </div>


        </section>

    </main>

</div>

<script>

    (async () =>
    {
        showLoading();

        try {
            let res = await obtenerDatos({
                url: `@Url.Action("ObtenerRegiones", "EjemploCheckbox")`,
                queryString: null
            });

            llenarElementoRegiones({ querySelector: "#probandoRegiones", arreglo: res });
        }
        catch (ex) {
            console.log(ex);
        }
        finally { hideLoading() }
    })();

    //#region Regiones

    function llenarElementoRegiones(datos)
    {
        document.querySelector(datos.querySelector).innerHTML = `
        <div id="${datos.querySelector}" class="mensajes">
            <fieldset class="form-check texto">
                <input class="form-check-input seleccionar-todo" type="checkbox" onchange="marcarTodoRegiones(event)"
                id="checkbox-all-area-academica">

                <label class="form-check-label" for="checkbox-all-area-academica">Seleccionar todos</label>
            </fieldset>

            ${datos.arreglo.map(x =>
            {
                return `<fieldset class="form-check texto">
                    <input class="form-check-input" type="checkbox" value="${x.codigo}"
                    onchange="seleccionarRegion('${x.codigo}')" id="checkbox-area-academica-${x.codigo}">

                    <label class="form-check-label" for="checkbox-area-academica-${x.codigo}">${x.descripcion}</label>
                </fieldset>`;
            })
            .join("")}
        </div>
        `;
    }

    function seleccionarRegion(codigo)
    {
        let marcarTodo = Array.from(document.querySelectorAll(`#probandoRegiones input[type="checkbox"]:not(.seleccionar-todo)`)).every(x => x.checked);
        document.querySelector("#checkbox-all-area-academica").checked = marcarTodo;

        traerProvincias();
    }

    function marcarTodoRegiones(evento)
    {
        let estaMarcado = evento.target.checked;
        let checkboxes = document.querySelectorAll(`#probandoRegiones input[type="checkbox"]`);
        checkboxes.forEach(checkbox => checkbox.checked = estaMarcado);
        traerProvincias();
    }

    //#endregion Regiones

    //#region Provincias

    function llenarElementoProvincias(datos)
    {
        document.querySelector(datos.querySelector).innerHTML = `
        <div id="${datos.querySelector}" class="mensajes">
            <fieldset class="form-check texto">
                <input class="form-check-input seleccionar-todo" type="checkbox" onchange="marcarTodoProvincias(event)"
                id="checkbox-all-programa-estudio">

                <label class="form-check-label" for="checkbox-all-programa-estudio">Seleccionar todos</label>
            </fieldset>

            ${datos.arreglo.map(x =>
            {
                return `<fieldset class="form-check texto">
                    <input class="form-check-input" type="checkbox" value="${x.codigo}"
                    onchange="seleccionarProvincia('${x.codigo}')" id="checkbox-programa-estudio-${x.codigo}">

                    <label class="form-check-label" for="checkbox-programa-estudio-${x.codigo}">${x.descripcion}</label>
                </fieldset>`;
            })
            .join("")}
        </div>
        `;
    }

    function seleccionarProvincia(codigo)
    {
        let marcarTodo = Array.from(document.querySelectorAll(`#probandoProvincias input[type="checkbox"]:not(.seleccionar-todo)`)).every(x => x.checked);
        document.querySelector("#checkbox-all-programa-estudio").checked = marcarTodo;

        traerComunas();
    }

    function marcarTodoProvincias(evento) {
        let estaMarcado = evento.target.checked;
        let checkboxes = document.querySelectorAll(`#probandoProvincias input[type="checkbox"]`);
        checkboxes.forEach(checkbox => checkbox.checked = estaMarcado);
        traerComunas();
    }

    async function traerProvincias()
    {
        limpiarElemento("#probandoProvincias");
        limpiarElemento("#probandoComunas");

        let valores = obtenerValores("#probandoRegiones");

        if (valores != null)
        {
            showLoading();

            try {

                let programaEstudios = await obtenerDatos({
                    url: `@Url.Action("ObtenerProvincias", "EjemploCheckbox")`,
                    queryString: `i_regiones=${valores}`
                });

                llenarElementoProvincias({ querySelector: "#probandoProvincias", arreglo: programaEstudios });
            }
            catch (ex) {
                console.log(ex);
            }
            finally { hideLoading() }
        }
    }

    //#endregion Provincias

    //#region Comunas

    function llenarElementoComunas(datos)
    {
        document.querySelector(datos.querySelector).innerHTML = `
        <div id="${datos.querySelector}" class="mensajes">
            <fieldset class="form-check texto">
                <input class="form-check-input seleccionar-todo" type="checkbox" onchange="marcarTodoComunas(event)"
                id="checkbox-all-asignatura">

                <label class="form-check-label" for="checkbox-all-asignatura">Seleccionar todos</label>
            </fieldset>

            ${datos.arreglo.map(x =>
            {
                return `<fieldset class="form-check texto">
                    <input class="form-check-input" type="checkbox" value="${x.codigo}"
                    onchange="seleccionarComuna('${x.codigo}')" id="checkbox-asignatura-${x.codigo}">

                    <label class="form-check-label" for="checkbox-asignatura-${x.codigo}">${x.descripcion}</label>
                </fieldset>`;
            })
            .join("")}
        </div>
        `;
    }

    function seleccionarComuna(codigo)
    {
        let marcarTodo = Array.from(document.querySelectorAll(`#probandoComunas input[type="checkbox"]:not(.seleccionar-todo)`)).every(x => x.checked);
        document.querySelector("#checkbox-all-asignatura").checked = marcarTodo;
    }

    function marcarTodoComunas(evento)
    {
        let estaMarcado = evento.target.checked;
        let checkboxes = document.querySelectorAll(`#probandoComunas input[type="checkbox"]`);
        checkboxes.forEach(checkbox => checkbox.checked = estaMarcado);
    }

    async function traerComunas()
    {
        limpiarElemento("#probandoComunas");

        let valores = obtenerValores("#probandoProvincias");
        console.log(valores);

        if (valores != null)
        {
            showLoading();

            try {

                let res = await obtenerDatos({
                    url: `@Url.Action("ObtenerComunas", "EjemploCheckbox")`,
                    queryString: `i_provincias=${valores}`
                });

                llenarElementoComunas({ querySelector: "#probandoComunas", arreglo: res });
            }
            catch (ex) {
                console.log(ex);
            }
            finally { hideLoading() }
        }
    }

    //#endregion Comunas

    //==========================================>>>>

    function obtenerValores(querySelector)
    {
        let checkboxSeleccionados = Array.from(document.querySelectorAll(`${querySelector} input[type="checkbox"]:not(.seleccionar-todo)`))
            .filter(x => x.checked);

        if (checkboxSeleccionados.length > 0)
            return checkboxSeleccionados.map(x => x.value).join(",");

        return null;
    }

    function obtenerDatos(datos)
    {
        return new Promise((resolve, reject) =>
        {
            fetch(datos.url, {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: datos.queryString,
            })
            .then(response =>
            {
                if (response.ok)
                {
                    response.json().then(res =>
                    {
                        if (res.status == 200)
                            resolve(res.objeto);
                        else
                            reject(res);
                    });
                }
            })
            .catch(error => {
                reject("Ocurrió un error al obtener la información");
            });
        });
    }

    function showLoading() {
        $('#loadingOverlay').show();
    }

    function hideLoading() {
        $('#loadingOverlay').hide();
    }

    function limpiarElemento(querySelector) {
        document.querySelector(querySelector).innerHTML = "";
    }

</script>